# ===================================================================
# 기존 Member 관련 타입 및 API (PostgreSQL DB)
# ===================================================================
# [수정] Member -> User로 이름을 변경하여 명확하게 합니다.
# 이미 User 엔티티를 사용하고 있으므로 스키마도 통일하는 것이 좋습니다.
type User {
    userid: ID! # 필드명도 엔티티와 일치시킵니다.
    username: String!
    userRole: String # userRole도 추가해줍니다.
}


# ===================================================================
# PACS 데이터 관련 타입 (Oracle DB) - 최종 확장 버전
# ===================================================================
# PatientTab
type Patient {
    pid: ID!
    pname: String
    psex: String
    pbirthdate: String
    studies: [Study]
}

# StudyTab
type Study {
    studyKey: ID!
    studyinsuid: String
    studydate: String
    studytime: String
    accessnum: String
    studyid: String
    studydesc: String
    modality: String
    bodypart: String
    pid: String
    pname: String
    psex: String
    pbirthdatetime: String
    patage: String
    seriescnt: Int
    imagecnt: Int
    series: [Series]
    patient: Patient
    # [추가] 이 검사에 작성된 소견서 정보를 조회할 수 있는 관계를 추가합니다.
    report: Report
}

# SeriesTab
type Series {
    studyKey: ID!
    seriesKey: ID!
    studyinsuid: String
    seriesinsuid: String
    seriesnum: Int
    modality: String
    seriesdate: String
    seriestime: String
    bodypart: String
    seriesdesc: String
    imagecnt: Int
    images: [Image]
    study: Study
}

# ImageTab
type Image {
    studyKey: ID!
    seriesKey: ID!
    imageKey: ID!
    studyinsuid: String
    seriesinsuid: String
    sopinstanceuid: String
    sopclassuid: String
    ststorageid: Int
    path: String
    fname: String
    series: Series
}

# ===================================================================
# [추가] 소견서(Report) 관련 타입 (PostgreSQL DB)
# ===================================================================
# Report의 상태를 나타내는 Enum
enum ReportStatus {
    DRAFT
    FINAL
    CORRECTED
}

# 소견서(Report) 정보를 나타내는 타입
type Report {
    reportId: ID!
    studyKey: Long!
    author: User! # 소견서 작성자 정보 (위의 User 타입과 연결)
    reportStatus: ReportStatus
    reportContent: String
    createdAt: String # ISO 8601 형식의 날짜/시간 문자열
    updatedAt: String
}

# 소견서 생성 또는 수정을 위한 입력 타입
input ReportInput {
    studyKey: Long!
    reportContent: String!
    reportStatus: ReportStatus = DRAFT
}


# ===================================================================
# API 진입점 통합 (Query / Mutation)
# ===================================================================
# 데이터를 조회(Read)하는 API들을 한 곳에 정의합니다.
type Query {
    # [기존] Member 관련 API는 지금 상황에선 불필요하므로 주석 처리하거나 삭제합니다.
    # findAllMembers: [Member]

    # [기존] Oracle DB PACS 데이터 조회 API
    patient(pid: ID!): Patient
    study(studyKey: ID!): Study
    series(studyKey: ID!, seriesKey: ID!): Series

    # [추가] PostgreSQL DB 소견서 조회 API
    reportByStudyKey(studyKey: Long!): Report
}

# 데이터를 변경(Create, Update, Delete)하는 API들을 정의합니다.
type Mutation {
    # [기존] Member 관련 API는 지금 상황에선 불필요하므로 주석 처리하거나 삭제합니다.
    # createMember(username: String!, email: String!): Member

    # [추가] PostgreSQL DB 소견서 생성/수정 API
    createOrUpdateReport(input: ReportInput!): Report!
}