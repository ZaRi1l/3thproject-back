spring.application.name=3thproject_web



# ===================================================================
# DATABASE (PostgreSQL on AWS RDS)
# ===================================================================

# DB 연결을 위한 URL (jdbc:postgresql://{엔드포인트}:{포트}/{데이터베이스이름})
spring.datasource.url=jdbc:postgresql://project-3th-db.cbgmiumso2dw.ap-northeast-2.rds.amazonaws.com:5432/project_3th_db

# DB 접속 유저 이름
spring.datasource.username=postgres

# DB 접속 비밀번호 
spring.datasource.password=qwer1234

# 사용할 JDBC 드라이버 클래스 지정
spring.datasource.driver-class-name=org.postgresql.Driver


# ===================================================================
# JPA & HIBERNATE (데이터베이스 객체 매핑)
# ===================================================================

# JPA 관련 설정
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# DDL(Data Definition Language) 자동 생성 옵션
# create: 애플리케이션 시작 시 기존 테이블을 삭제하고 새로 생성 (테스트용)
# create-drop: 시작 시 생성, 종료 시 삭제 (테스트용)
# update: 변경된 부분만 감지해서 테이블에 반영 (개발용으로 편리함)
# validate: 엔티티와 테이블이 정상 매핑되었는지 확인만 함
# none: 아무것도 하지 않음 (운영 환경에서 권장)
spring.jpa.hibernate.ddl-auto=update

# 실행되는 SQL 쿼리를 콘솔에 보여주기 (개발 시 매우 유용)
spring.jpa.show-sql=true

# 보여주는 SQL 쿼리를 예쁘게 포맷팅하기
spring.jpa.properties.hibernate.format_sql=true