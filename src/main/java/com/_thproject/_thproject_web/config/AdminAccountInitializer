import com._thproject._thproject_web.entity.User;
import com._thproject._thproject_web.repository.UserRepository;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

@Component
@RequiredArgsConstructor
@Slf4j
public class AdminAccountInitializer implements CommandLineRunner {

    private final UserRepository userRepository;
    private final PasswordEncoder passwordEncoder;

    // application.yml 파일에서 값을 읽어옵니다.
    @Value("${initial-admin.id}")
    private String adminId;

    @Value("${initial-admin.password}")
    private String adminPassword;

    @Override
    public void run(String... args) throws Exception {
        // DB에서 adminId로 사용자를 검색하여 이미 존재하는지 확인
        if (userRepository.findByUserid(adminId).isPresent()) {
            log.info(">>>>>> 초기 관리자 계정이 이미 존재하여 생성하지 않습니다.");
            return;
        }

        log.info(">>>>>> 초기 관리자 계정을 생성합니다...");

        // 존재하지 않으면 새로운 관리자 계정 생성
        User adminUser = User.builder()
                .userid(adminId)
                .username("관리자")
                .password(passwordEncoder.encode(adminPassword)) // 비밀번호는 반드시 암호화
                .userRole("ADMIN") // 역할은 'ADMIN'으로 지정
                .build();

        userRepository.save(adminUser);

        log.info(">>>>>> 초기 관리자 계정 생성이 완료되었습니다. (ID: {}, PW: {})", adminId, adminPassword);
    }
}
